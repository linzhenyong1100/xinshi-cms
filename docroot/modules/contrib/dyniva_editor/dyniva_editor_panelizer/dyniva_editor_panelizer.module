<?php

/**
 * @file
 * Contains dyniva_editor_panelizer module.
 */

use Drupal\panels\Plugin\DisplayVariant\PanelsDisplayVariant;

/**
 * Implements hook_block_alter().
 */
function dyniva_editor_panelizer_block_alter(&$definitions) {
  foreach ($definitions as $key => $definition) {
    if (substr($key, 0, 14) == 'block_content:') {
      $definitions[$key]['class'] = 'Drupal\dyniva_editor_panelizer\Plugin\Block\BlockContentBlock';
    }
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function dyniva_editor_panelizer_entity_type_alter(array &$entity_types) {
  if (isset($entity_types['block_content'])) {
    $entity_types['block_content']->setFormClass('panels_ipe', 'Drupal\dyniva_editor_panelizer\Form\PanelsIPEBlockContentForm');
  }
  if (isset($entity_types['block_type_attribute'])) {
    $entity_types['block_type_attribute']->setClass('Drupal\dyniva_editor_panelizer\Entity\BlockTypeAttributeEntity');
  }
}

/**
 * Implements hook_panels_build_alter().
 */
function dyniva_editor_panelizer_panels_build_alter(&$build, PanelsDisplayVariant $panels_display) {
  $builder = $panels_display->getBuilder();
  $storage_type = $panels_display->getStorageType();

  $is_panelizer = ($builder->getPluginId() == 'ipe' &&
    in_array($storage_type, ['panelizer_default', 'panelizer_field']) &&
    isset($build['#attached']) &&
    isset($build['#attached']['library']) &&
    in_array('panels_ipe/panels_ipe', $build['#attached']['library']));

  if ($is_panelizer) {
    $build['#attached']['library'][] = 'dyniva_editor_panelizer/panels_ipe';

    if(\Drupal::moduleHandler()->moduleExists('component_hub')) {
      $widget_categories = \Drupal::service('config.factory')->get('component_hub.content_widget')->get('categories');
      usort($widget_categories, function($a, $b) {
        if($a['weight'] == $b['weight']) return 0;
        return $a['weight'] > $b['weight'] ? 1 : -1;
      });
      $groups = [];
      foreach($widget_categories as $category) {
        $groups[] = [
          'id' => $category['id'],
          'name' => $category['name']
        ];
      }
    }elseif(\Drupal::moduleHandler()->moduleExists('entity_theme_engine')) {
      $widgetService = \Drupal::service('entity_theme_engine.entity_widget_service');
      $widgets = $widgetService->getAllWidgets();
      $widget_categories = [];
      foreach ($widgets as $widget) {
        if($category = $widget->getCategory()) {
          $widget_categories[$category] = $category;
        }
      }
      ksort($widget_categories);
      $groups = [];
      foreach($widget_categories as $category) {
        $groups[] = [
          'id' => $category,
          'name' => $category
        ];
      }
    } else {
      $storage = \Drupal::service('entity.manager')->getStorage('taxonomy_term');
      $vid = 'widget_group';
      $tids = $storage->getQuery()
        ->condition('vid', $vid)
        ->execute();
      $entities = $storage->loadMultiple($tids);
      $groups = [];
      foreach ($entities as $term) {
        $groups[] = [
          'id' => $term->id(),
          'name' => $term->name->value,
        ];
      }
    }
    $build['#attached']['drupalSettings']['dyniva_editor_panelizer']['groups'] = $groups;
  }

  if (\Drupal::service('module_handler')->moduleExists('content_lock')) {
    $builder = $panels_display->getBuilder();
    $storage_type = $panels_display->getStorageType();
    $lock_service = \Drupal::service('content_lock');

    $is_picl = $builder->getPluginId() == 'ipe' &&
            in_array($storage_type, ['panelizer_default', 'panelizer_field']) &&
            isset($build['#attached']) &&
            isset($build['#attached']['library']) &&
            in_array('panels_ipe/panels_ipe', $build['#attached']['library']) &&
            isset($panels_display->getContexts()['@panelizer.entity_context:entity']) &&
            $lock_service->isLockable($panels_display->getContexts()['@panelizer.entity_context:entity']->getContextData()->getValue());

    if ($is_picl) {
      $build['#attached']['library'][] = 'dyniva_editor_panelizer/content_lock';
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function dyniva_editor_panelizer_module_implements_alter(&$implementations, $hook) {
  // Hook entity_type_build不能比panels_ipe更前.
  if ($hook == 'entity_type_build' && array_key_exists('dyniva_editor_panelizer', $implementations)) {
    $group = $implementations['dyniva_editor_panelizer'];
    unset($implementations['dyniva_editor_panelizer']);
    $implementations['dyniva_editor_panelizer'] = $group;
  }
}

/**
 * Implements hook_form_alter().
 * @param $form
 * @param FormStateInterface $form_state
 * @param $form_id
 */
function dyniva_editor_panelizer_form_alter(&$form, Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $access = false;
  if (isset($form['panelizer'])) {
    $widget = $form['panelizer']['widget'];
    foreach ($widget as $k => $w) {
      if (is_numeric($k) && isset($w['default']['#options'])) {
        $options[] = $w;
        if (count($w['default']['#options']) >= 2) {
          $access = true;
        }
      }
    }
    $count = count($options);
    if ($count < 2 && !$access) {
      $form['panelizer']['#access'] = false;
    }
  }
}